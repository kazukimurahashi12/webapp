# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  GOBIN:  '$(GOPATH)/bin'
  GOROOT: '/usr/local/go'
  GOPATH: '$(system.defaultWorkingDirectory)/gopath'
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)/server-app'

name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/feature_cicd
jobs:
- job: Job_1
  displayName: Agent job 1
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
    clean: true
    fetchTags: true
  - task: GoTool@0
    displayName: Use Go 1.20
    inputs:
      version: 1.20
  - script: |
      go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
    displayName: Install golangci-lint

  - script: |
      golangci-lint run --config=.golangci.yml ./...
    displayName: Run golangci-lint

  - script: |
      go test ./... -coverprofile=coverage.out
    displayName: Run unit tests with coverage

  - script: |
      total=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
      echo "Total coverage: $total%"
      threshold=85.0
      result=$(echo "$total >= $threshold" | bc -l)
      if [ "$result" -ne 1 ]; then
        echo "Test coverage is below threshold of ${threshold}%"
        exit 1
      fi
    displayName: Enforce coverage threshold (>=85%)
  - task: Docker@0
    displayName: build
    inputs:
      azureSubscriptionEndpoint: edde5bbe-1ba8-4ce1-8d83-232eb69633c4
      azureContainerRegistry: '{"loginServer":"kmurahashi.azurecr.io", "id" : "/subscriptions/71bf2874-727f-4673-8c97-50e906012366/resourceGroups/rg_k_murahashi/providers/Microsoft.ContainerRegistry/registries/kmurahashi"}'
      includeSourceTags: true
  - task: Docker@0
    displayName: Push
    inputs:
      azureSubscriptionEndpoint: edde5bbe-1ba8-4ce1-8d83-232eb69633c4
      azureContainerRegistry: '{"loginServer":"kmurahashi.azurecr.io", "id" : "/subscriptions/71bf2874-727f-4673-8c97-50e906012366/resourceGroups/rg_k_murahashi/providers/Microsoft.ContainerRegistry/registries/kmurahashi"}'
      action: Push an image
      includeSourceTags: true
  - task: AzureContainerApps@1
    displayName: Azure Container Apps Deploy
    inputs:
      appSourcePath: $(Build.SourcesDirectory)
      connectedServiceNameARM: edde5bbe-1ba8-4ce1-8d83-232eb69633c4
      acrName: kmurahashi
      dockerfilePath: Dockerfile
      containerAppName: kmurahashiapp
      resourceGroup: rg_k_murahashi
      runtimeStack: ' '
      disableTelemetry: false
...
